/*the hot key for commenting in css is type, then highlight and cntrl+/ then it will change to comment, or just use hotkey and it will auto populate
using an * asterisk targets all elements on the page */

/* ---GENERAL--- */
@font-face {
  font-family: "Mochi-Regular";
  src: url("./assets/Mochi-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

* {
  margin: 0;
  padding: 0;
}
/*this is a custom shortcut for most used elements so I don't have to put the hex code each time
to use: var(--primary-color) or whatever the variable is namedq
*/

:root {
  --btn-color: #fee9a8;
}

body {
  font-family: "Mochi-Regular", sans-serif;
  background-color: #d7ecb0;
  background-size: cover;
  margin: 0;
  padding: 0;
}

/*---SECTIONS---*/

#welcome-page {
  justify-content: center;
  height: 100vh;
  width: 100vw;
  background: url("./assets/3ds.png") no-repeat;
  background-size: contain;
  background-position: center;
}

.welcome-container {
height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
/*---BUTTONS---*/

.btn-container {
  position: relative;
  justify-content: center;
  align-items: center;
  display: flex;
  flex-direction: column;
  top: 25vh;
  background-color: none;
  text-align: left;
}

/*need to add a hover effect to the buttons*/
.new-btn,
.exit-btn {
  font-family: Mochi-Regular, sans-serif;
  font-weight: 300;
  font-size: 3rem;
  color: #fee9a8;
  transition: all 300ms ease;
  background: none;
  border: none;
}

.new-btn::before,
.exit-btn::before {
  content: "";
  display: inline-block;
  width: 1.2em;
  height: 1.2em;
  vertical-align: middle;
  background-image: url("./assets/playbutton.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: opacity 0.6s, transform 0.6s;
  opacity: 0;
}

.new-btn:hover::before,
.exit-btn:hover::before {
  opacity: 1;
  transform: scale(1.5);
}

/*
The content: ""; in CSS is used with pseudo-elements like ::before or ::after.
It creates a generated content box before or after the element.
When you set content: "";, it creates an empty pseudo-element that you can style (for example, to show an icon, background image, or shape).
*/
